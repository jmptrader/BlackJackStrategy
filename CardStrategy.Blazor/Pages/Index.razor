@page "/"
@inject CardStrategy.Core.ViewModels.MainViewModel MainViewModel
@using CardStrategy.Models;

<div>
    <h1>BlackJack Strategy Analyser</h1>

    <div class="row">
        <div class="col-sm-8">
            <StrategyTable MainViewModel="@MainViewModel" />

        </div>
        <div class="col-sm-4">
            <table class="table">
                @foreach (var logEntry in MainViewModel.Log)
                {
                    <tr>
                        <td>@logEntry.TimeStamp</td>
                        <td>@logEntry.Message</td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <div class="row">
        <table>
            <tr>
                <td>
                    <label>Starting pot</label>
                </td>
                <td>
                    <input type="number" @bind="@MainViewModel.PlayerFunds" />
                </td>
            </tr>

            <tr>
                <td>
                    <label>Target pot</label>
                </td>
                <td>
                    <input type="number" @bind="@MainViewModel.TargetFunds" />
                </td>
            </tr>

            <tr>
                <td>
                    <label>Betting Strategy</label>
                </td>
                <td>
                    <select id="select-box" bind="@MainViewModel.BettingStrategy">
                        <option value=@BettingStrategy.Steady>@BettingStrategy.Steady.ToString()</option>
                        <option value=@BettingStrategy.IncreaseOnWin>@BettingStrategy.IncreaseOnWin.ToString()</option>
                        <option value=@BettingStrategy.IncreaseOnLose>@BettingStrategy.IncreaseOnLose.ToString()</option>
                        <option value=@BettingStrategy.DoubleOnWin>@BettingStrategy.DoubleOnWin.ToString()</option>
                        <option value=@BettingStrategy.DoubleOnLose>@BettingStrategy.DoubleOnLose.ToString()</option>
                    </select>
                </td>
            </tr>
        </table>
    </div>
</div>

<hr />

<button @onclick="@(() => MainViewModel.RunAnalysisCommand.Execute(null))">Run Analysis</button>

@code { 
    protected override Task OnInitializedAsync()
    {
        MainViewModel.Init();
        return Task.CompletedTask;
    }

}
